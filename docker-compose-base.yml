version: "3.8"

services:
  db:
    image: postgres:15
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data
    env_file:
      - ./.env
    networks:
      - "backend"
    expose:
      - "${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    networks:
      - "backend"
    volumes:
      - "redis_data:/opt/redis/data"
    expose:
      - "${REDIS_PORT}"
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 5

  api:
    build: .
    entrypoint: ./entrypoint.sh
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
    env_file:
      - ./.env
    networks:
      - "backend"
    depends_on:
      - db
      - redis

  migration:
    build: .
    command: bash -c "flask db upgrade"
    env_file:
      - ./.env
    networks:
      - "backend"
    depends_on:
      - api

volumes:
    redis_data:
    pgdata:

networks:
  backend:
    driver: bridge
