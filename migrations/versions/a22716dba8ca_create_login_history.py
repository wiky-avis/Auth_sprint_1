"""create table login_history

Revision ID: a22716dba8ca
Revises: b214f54d3781
Create Date: 2023-05-02 15:03:55.732617

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a22716dba8ca'
down_revision = 'b214f54d3781'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('login_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('action_type', sa.String(), nullable=True),
    sa.Column('device_type', sa.String(), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_dt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'device_type'),
    sa.UniqueConstraint('id', 'device_type'),
    postgresql_partition_by='LIST (device_type)'
    )
    op.create_unique_constraint("login_history_uq_id_device_type", "login_history", ["id", "device_type"])
    op.execute("""CREATE TABLE IF NOT EXISTS login_history_web PARTITION OF login_history FOR VALUES IN ('web')""")
    op.execute("""CREATE TABLE IF NOT EXISTS login_history_mobile PARTITION OF login_history FOR VALUES IN ('mobile')""")
    op.execute("""CREATE TABLE IF NOT EXISTS login_history_tablet PARTITION OF login_history FOR VALUES IN ('tablet')""")
    op.execute("""CREATE TABLE IF NOT EXISTS login_history_unknown PARTITION OF login_history FOR VALUES IN ('unknown')""")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("login_history_uq_id_device_type", "login_history", type_="unique")
    op.drop_table("login_history")
    op.drop_table("login_history_web")
    op.drop_table("login_history_mobile")
    op.drop_table("login_history_tablet")
    op.drop_table("login_history_unknown")
    # ### end Alembic commands ###
